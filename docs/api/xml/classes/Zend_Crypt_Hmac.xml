<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Crypt_Hmac" namespace="" name="Zend_Crypt_Hmac" abstract="false" final="false" start="39" end="181">
  <file path="/var/www/_modules/social_integration/trunk/docs/en/phpdox/../../../thirdparty/Zend/Crypt" file="Hmac.php" realpath="/var/www/_modules/social_integration/trunk/thirdparty/Zend/Crypt/Hmac.php" size="5654" time="2015-03-14T10:23:59+13:00" unixtime="1426281839" sha1="e54f744615e7ccf29a49c0b950c78fd816966e41" relative="thirdparty/Zend/Crypt/Hmac.php"/>
  <docblock>
    <description compact="PHP implementation of the RFC 2104 Hash based Message Authentication Code algorithm."/>
    <todo value="Patch for refactoring failed tests (key block sizes &gt;80 using internal algo)"/>
    <todo value="Check if mhash() is a required alternative (will be PECL-only soon)"/>
    <category value="Zend"/>
    <package value="Zend_Crypt"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <extends full="Zend_Crypt" namespace="" name="Zend_Crypt"/>
  <member name="_key" type="{unknown}" default="null" visibility="protected" line="47">
    <docblock>
      <description compact="The key to use for the hash"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_packFormat" type="{unknown}" default="null" visibility="protected" line="54">
    <docblock>
      <description compact="pack() format to be used for current hashing method"/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_hashAlgorithm" type="string" default="'md5'" visibility="protected" line="62">
    <docblock>
      <description compact="Hashing algorithm; can be the md5/sha1 functions or any algorithm name listed in the output of PHP 5.1.2+ hash_algos()."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="_supportedMhashAlgorithms" type="array" visibility="protected" line="69">
    <docblock>
      <description compact="List of algorithms supported my mhash()"/>
      <var type="array"/>
    </docblock>
  </member>
  <constant name="STRING" value="'string'">
    <docblock>
      <description compact="Constants representing the output mode of the hash algorithm"/>
    </docblock>
  </constant>
  <constant name="BINARY" value="'binary'"/>
  <method name="compute" start="91" end="105" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Performs a HMAC computation given relevant details such as Key, Hashing algorithm, the data to compute MAC of, and an output format of String, Binary notation or BTWOC."/>
      <param type="string" variable="$key"/>
      <param type="string" variable="$hash"/>
      <param type="string" variable="$data"/>
      <param type="string" variable="$output"/>
      <param type="boolean" variable="$internal"/>
      <return type="string"/>
    </docblock>
    <parameter name="key" byreference="false" type="{unknown}"/>
    <parameter name="hash" byreference="false" type="{unknown}"/>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="output" byreference="false" type="{unknown}" default="self::STRING"/>
    <inline>
      <comment value="set the key" line="93"/>
      <comment value="set the hash" line="100"/>
      <comment value="perform hashing and return" line="103"/>
    </inline>
  </method>
  <method name="_setHashAlgorithm" start="113" end="136" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Setter for the hash method."/>
      <param type="string" variable="$hash"/>
      <return type="object">
        <type full="Zend_Crypt_Hmac" namespace="" name="Zend_Crypt_Hmac"/>
      </return>
    </docblock>
    <parameter name="hash" byreference="false" type="{unknown}"/>
  </method>
  <method name="_hash" start="146" end="162" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Perform HMAC and return the keyed data"/>
      <param type="string" variable="$data"/>
      <param type="string" variable="$output"/>
      <param description="Option to not use hash() functions for testing" type="object" variable="$internal">
        <type full="bool" namespace="" name="bool"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="data" byreference="false" type="{unknown}"/>
    <parameter name="output" byreference="false" type="{unknown}" default="self::STRING"/>
    <parameter name="internal" byreference="false" type="{unknown}" default="false"/>
  </method>
  <method name="_getMhashDefinition" start="172" end="179" abstract="false" final="false" static="true" visibility="protected">
    <docblock>
      <description compact="Since MHASH accepts an integer constant representing the hash algorithm we need to make a small detour to get the correct integer matching our algorithm's name."/>
      <param type="string" variable="$hashAlgorithm"/>
      <return type="integer"/>
    </docblock>
    <parameter name="hashAlgorithm" byreference="false" type="{unknown}"/>
  </method>
  <parent full="Zend_Crypt" namespace="" name="Zend_Crypt">
    <constant name="TYPE_OPENSSL" value="'openssl'"/>
    <constant name="TYPE_HASH" value="'hash'"/>
    <constant name="TYPE_MHASH" value="'mhash'"/>
    <member name="_type" type="{unknown}" default="null" visibility="protected" line="35"/>
    <member name="_supportedAlgosOpenssl" type="array" visibility="protected" line="40">
      <docblock>
        <description/>
        <var type="array"/>
      </docblock>
    </member>
    <member name="_supportedAlgosMhash" type="array" visibility="protected" line="56">
      <docblock>
        <description/>
        <var type="array"/>
      </docblock>
    </member>
    <method name="hash" start="81" end="91" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <param type="string" variable="$algorithm"/>
        <param type="string" variable="$data"/>
        <param type="object" variable="$binaryOutput">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return type="object">
          <type full="unknown" namespace="" name="unknown"/>
        </return>
      </docblock>
      <parameter name="algorithm" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="{unknown}"/>
      <parameter name="binaryOutput" byreference="false" type="{unknown}" default="false"/>
    </method>
    <method name="_detectHashSupport" start="97" end="125" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$algorithm"/>
        <throws type="object">
          <type full="Zend_Crypt_Exception" namespace="" name="Zend_Crypt_Exception"/>
        </throws>
      </docblock>
      <parameter name="algorithm" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="@see Zend_Crypt_Exception" line="120"/>
      </inline>
    </method>
    <method name="_digestHash" start="133" end="136" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$algorithm"/>
        <param type="string" variable="$data"/>
        <param type="object" variable="$binaryOutput">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="algorithm" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="{unknown}"/>
      <parameter name="binaryOutput" byreference="false" type="{unknown}"/>
    </method>
    <method name="_digestMhash" start="144" end="152" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$algorithm"/>
        <param type="string" variable="$data"/>
        <param type="object" variable="$binaryOutput">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="algorithm" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="{unknown}"/>
      <parameter name="binaryOutput" byreference="false" type="{unknown}"/>
    </method>
    <method name="_digestOpenssl" start="160" end="166" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description/>
        <param type="string" variable="$algorithm"/>
        <param type="string" variable="$data"/>
        <param type="object" variable="$binaryOutput">
          <type full="bool" namespace="" name="bool"/>
        </param>
        <return type="string"/>
      </docblock>
      <parameter name="algorithm" byreference="false" type="{unknown}"/>
      <parameter name="data" byreference="false" type="{unknown}"/>
      <parameter name="binaryOutput" byreference="false" type="{unknown}"/>
    </method>
  </parent>
</class>
