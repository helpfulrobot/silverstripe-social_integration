<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Http_CookieJar" namespace="" name="Zend_Http_CookieJar" abstract="false" final="false" start="60" end="405">
  <file path="/var/www/_modules/social_integration/trunk/docs/en/phpdox/../../../thirdparty/Zend/Http" file="CookieJar.php" realpath="/var/www/_modules/social_integration/trunk/thirdparty/Zend/Http/CookieJar.php" size="13108" time="2015-03-14T10:23:58+13:00" unixtime="1426281838" sha1="133f4bda0b944b59a8bc6f121c3e277379ba353c" relative="thirdparty/Zend/Http/CookieJar.php"/>
  <docblock>
    <description compact="A Zend_Http_CookieJar object is designed to contain and maintain HTTP cookies, and should be used along with Zend_Http_Client in order to manage cookies across HTTP requests and responses.">The class contains an array of Zend_Http_Cookie objects. Cookies can be added to the jar
automatically from a request or manually. Then, the jar can find and return the cookies
needed for a specific HTTP request.

A special parameter can be passed to all methods of this class that return cookies: Cookies
can be returned either in their native form (as Zend_Http_Cookie objects) or as strings -
the later is suitable for sending as the value of the "Cookie" header in an HTTP request.
You can also choose, when returning more than one cookie, whether to get an array of strings
(by passing Zend_Http_CookieJar::COOKIE_STRING_ARRAY) or one unified string for all cookies
(by passing Zend_Http_CookieJar::COOKIE_STRING_CONCAT).</description>
    <link value="http://wp.netscape.com/newsref/std/cookie_spec.html for some specs."/>
    <category value="Zend"/>
    <package value="Zend_Http"/>
    <subpackage value="CookieJar"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <implements full="Countable" namespace="" name="Countable"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <constant name="COOKIE_OBJECT" value="0">
    <docblock>
      <description compact="Return cookie(s) as a Zend_Http_Cookie object"/>
    </docblock>
  </constant>
  <constant name="COOKIE_STRING_ARRAY" value="1">
    <docblock>
      <description compact="Return cookie(s) as a string (suitable for sending in an HTTP request)"/>
    </docblock>
  </constant>
  <constant name="COOKIE_STRING_CONCAT" value="2">
    <docblock>
      <description compact="Return all cookies as one long string (suitable for sending in an HTTP request)"/>
    </docblock>
  </constant>
  <member name="cookies" type="array" visibility="protected" line="97">
    <docblock>
      <description compact="Array storing cookies">Cookies are stored according to domain and path:
$cookies
 + www.mydomain.com
   + /
     - cookie1
     - cookie2
   + /somepath
     - othercookie
 + www.otherdomain.net
   + /
     - alsocookie</description>
      <var type="array"/>
    </docblock>
  </member>
  <member name="_rawCookies" type="array" visibility="protected" line="104">
    <docblock>
      <description compact="The Zend_Http_Cookie array"/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="110" end="111" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Construct a new CookieJar object"/>
    </docblock>
  </constructor>
  <method name="addCookie" start="121" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add a cookie to the jar. Cookie should be passed either as a Zend_Http_Cookie object or as a string - in which case an object is created from the string."/>
      <param type="object" variable="$cookie">
        <type full="Zend_Http_Cookie|string" namespace="" name="Zend_Http_Cookie|string"/>
      </param>
      <param description="Optional reference URI (for domain, path, secure)" type="object" variable="$ref_uri">
        <type full="Zend_Uri_Http|string" namespace="" name="Zend_Uri_Http|string"/>
      </param>
      <param type="boolean" variable="$encodeValue"/>
    </docblock>
    <parameter name="cookie" byreference="false" type="{unknown}"/>
    <parameter name="ref_uri" byreference="false" type="{unknown}" default="null"/>
    <parameter name="encodeValue" byreference="false" type="{unknown}" default="true"/>
  </method>
  <method name="addCookiesFromResponse" start="148" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parse an HTTP response, adding all the cookies set in that response to the cookie jar."/>
      <param type="object" variable="$response">
        <type full="Zend_Http_Response" namespace="" name="Zend_Http_Response"/>
      </param>
      <param description="Requested URI" type="object" variable="$ref_uri">
        <type full="Zend_Uri_Http|string" namespace="" name="Zend_Uri_Http|string"/>
      </param>
      <param type="boolean" variable="$encodeValue"/>
    </docblock>
    <parameter name="response" byreference="false" type="{unknown}"/>
    <parameter name="ref_uri" byreference="false" type="{unknown}"/>
    <parameter name="encodeValue" byreference="false" type="{unknown}" default="true"/>
  </method>
  <method name="getAllCookies" start="173" end="177" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all cookies in the cookie jar as an array"/>
      <param description="Whether to return cookies as objects of Zend_Http_Cookie or as strings" type="int" variable="$ret_as"/>
      <return type="object">
        <type full="array|string" namespace="" name="array|string"/>
      </return>
    </docblock>
    <parameter name="ret_as" byreference="false" type="{unknown}" default="self::COOKIE_OBJECT"/>
  </method>
  <method name="getMatchingCookies" start="190" end="214" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Return an array of all cookies matching a specific request according to the request URI, whether session cookies should be sent or not, and the time to consider as &quot;now&quot; when checking cookie expiry time."/>
      <param description="URI to check against (secure, domain, path)" type="object" variable="$uri">
        <type full="string|Zend_Uri_Http" namespace="" name="string|Zend_Uri_Http"/>
      </param>
      <param description="Whether to send session cookies" type="boolean" variable="$matchSessionCookies"/>
      <param description="Whether to return cookies as objects of Zend_Http_Cookie or as strings" type="int" variable="$ret_as"/>
      <param description="Override the current time when checking for expiry time" type="int" variable="$now"/>
      <return type="object">
        <type full="array|string" namespace="" name="array|string"/>
      </return>
    </docblock>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="matchSessionCookies" byreference="false" type="{unknown}" default="true"/>
    <parameter name="ret_as" byreference="false" type="{unknown}" default="self::COOKIE_OBJECT"/>
    <parameter name="now" byreference="false" type="{unknown}" default="null"/>
    <inline>
      <comment value="First, reduce the array of cookies to only those matching domain and path" line="199"/>
      <comment value="Next, run Cookie-&gt;match on all cookies to check secure, time and session mathcing" line="204"/>
      <comment value="Now, use self::_flattenCookiesArray again - only to convert to the return format ;)" line="210"/>
    </inline>
  </method>
  <method name="getCookie" start="224" end="261" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get a specific cookie according to a URI and name"/>
      <param description="The uri (domain and path) to match" type="object" variable="$uri">
        <type full="Zend_Uri_Http|string" namespace="" name="Zend_Uri_Http|string"/>
      </param>
      <param description="The cookie's name" type="string" variable="$cookie_name"/>
      <param description="Whether to return cookies as objects of Zend_Http_Cookie or as strings" type="int" variable="$ret_as"/>
      <return type="object">
        <type full="Zend_Http_Cookie|string" namespace="" name="Zend_Http_Cookie|string"/>
      </return>
    </docblock>
    <parameter name="uri" byreference="false" type="{unknown}"/>
    <parameter name="cookie_name" byreference="false" type="{unknown}"/>
    <parameter name="ret_as" byreference="false" type="{unknown}" default="self::COOKIE_OBJECT"/>
    <inline>
      <comment value="Get correct cookie path" line="235"/>
    </inline>
  </method>
  <method name="_flattenCookiesArray" start="271" end="300" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Helper function to recursivly flatten an array. Shoud be used when exporting the cookies array (or parts of it)"/>
      <param type="object" variable="$ptr">
        <type full="Zend_Http_Cookie|array" namespace="" name="Zend_Http_Cookie|array"/>
      </param>
      <param description="What value to return" type="int" variable="$ret_as"/>
      <return type="object">
        <type full="array|string" namespace="" name="array|string"/>
      </return>
    </docblock>
    <parameter name="ptr" byreference="false" type="{unknown}"/>
    <parameter name="ret_as" byreference="false" type="{unknown}" default="self::COOKIE_OBJECT"/>
  </method>
  <method name="_matchDomain" start="308" end="319" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Return a subset of the cookies array matching a specific domain"/>
      <param type="string" variable="$domain"/>
      <return type="array"/>
    </docblock>
    <parameter name="domain" byreference="false" type="{unknown}"/>
  </method>
  <method name="_matchPath" start="328" end="345" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Return a subset of a domain-matching cookies that also match a specified path"/>
      <param type="array" variable="$dom_array"/>
      <param type="string" variable="$path"/>
      <return type="array"/>
    </docblock>
    <parameter name="domains" byreference="false" type="{unknown}"/>
    <parameter name="path" byreference="false" type="{unknown}"/>
  </method>
  <method name="fromResponse" start="358" end="363" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Create a new CookieJar object and automatically load into it all the cookies set in an Http_Response object. If $uri is set, it will be considered as the requested URI for setting default domain and path of the cookie."/>
      <param description="HTTP Response object" type="object" variable="$response">
        <type full="Zend_Http_Response" namespace="" name="Zend_Http_Response"/>
      </param>
      <param description="The requested URI" type="object" variable="$uri">
        <type full="Zend_Uri_Http|string" namespace="" name="Zend_Uri_Http|string"/>
      </param>
      <return type="object">
        <type full="Zend_Http_CookieJar" namespace="" name="Zend_Http_CookieJar"/>
      </return>
      <todo value="Add the $uri functionality."/>
    </docblock>
    <parameter name="response" byreference="false" type="object">
      <type full="\\Zend_Http_Response" namespace="\" name="Zend_Http_Response"/>
    </parameter>
    <parameter name="ref_uri" byreference="false" type="{unknown}"/>
  </method>
  <method name="count" start="370" end="373" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Required by Countable interface"/>
      <return type="int"/>
    </docblock>
  </method>
  <method name="getIterator" start="380" end="383" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Required by IteratorAggregate interface"/>
      <return type="object">
        <type full="ArrayIterator" namespace="" name="ArrayIterator"/>
      </return>
    </docblock>
  </method>
  <method name="isEmpty" start="390" end="393" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Tells if the jar is empty of any cookie"/>
      <return type="object">
        <type full="bool" namespace="" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="reset" start="400" end="404" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Empties the cookieJar of any cookie"/>
      <return type="object">
        <type full="Zend_Http_CookieJar" namespace="" name="Zend_Http_CookieJar"/>
      </return>
    </docblock>
  </method>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
</class>
