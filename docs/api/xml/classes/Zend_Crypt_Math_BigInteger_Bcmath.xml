<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Crypt_Math_BigInteger_Bcmath" namespace="" name="Zend_Crypt_Math_BigInteger_Bcmath" abstract="false" final="false" start="39" end="203">
  <file path="/var/www/_modules/social_integration/trunk/docs/en/phpdox/../../../thirdparty/Zend/Crypt/Math/BigInteger" file="Bcmath.php" realpath="/var/www/_modules/social_integration/trunk/thirdparty/Zend/Crypt/Math/BigInteger/Bcmath.php" size="5343" time="2015-03-14T10:23:59+13:00" unixtime="1426281839" sha1="821ad28ac2ec9910d46f102e450285b941d0f435" relative="thirdparty/Zend/Crypt/Math/BigInteger/Bcmath.php"/>
  <docblock>
    <description compact="Support for arbitrary precision mathematics in PHP.">Zend_Crypt_Math_BigInteger_Bcmath is a wrapper across the PHP BCMath
extension.</description>
    <category value="Zend"/>
    <package value="Zend_Crypt"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <implements full="Zend_Crypt_Math_BigInteger_Interface" namespace="" name="Zend_Crypt_Math_BigInteger_Interface"/>
  <method name="init" start="49" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Initialise a big integer into an extension specific type. This is not applicable to BCMath."/>
      <param type="string" variable="$operand"/>
      <param type="int" variable="$base"/>
      <return type="string"/>
    </docblock>
    <parameter name="operand" byreference="false" type="{unknown}"/>
    <parameter name="base" byreference="false" type="integer" default="10"/>
  </method>
  <method name="add" start="61" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Adds two arbitrary precision numbers"/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="subtract" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="compare" start="84" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Compare two big integers and returns result as an integer where 0 means both are identical, 1 that left_operand is larger, or -1 that right_operand is larger."/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="int"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="divide" start="96" end="99" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Divide two big integers and return result or NULL if the denominator is zero."/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="object">
        <type full="string|null" namespace="" name="string|null"/>
      </return>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="modulus" start="106" end="109" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="modulus" byreference="false" type="{unknown}"/>
  </method>
  <method name="multiply" start="116" end="119" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="pow" start="126" end="129" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="powmod" start="136" end="139" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="left_operand" byreference="false" type="{unknown}"/>
    <parameter name="right_operand" byreference="false" type="{unknown}"/>
    <parameter name="modulus" byreference="false" type="{unknown}"/>
  </method>
  <method name="sqrt" start="146" end="149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$left_operand"/>
      <param type="string" variable="$right_operand"/>
      <return type="string"/>
    </docblock>
    <parameter name="operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="binaryToInteger" start="152" end="161" abstract="false" final="false" static="false" visibility="public">
    <parameter name="operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="integerToBinary" start="164" end="179" abstract="false" final="false" static="false" visibility="public">
    <parameter name="operand" byreference="false" type="{unknown}"/>
  </method>
  <method name="hexToDecimal" start="192" end="201" abstract="false" final="false" static="false" visibility="public">
    <parameter name="operand" byreference="false" type="{unknown}"/>
  </method>
  <interface full="Zend_Crypt_Math_BigInteger_Interface" namespace="" name="Zend_Crypt_Math_BigInteger_Interface">
    <method name="init" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
      <parameter name="operand" byreference="false" type="{unknown}"/>
      <parameter name="base" byreference="false" type="integer" default="10"/>
    </method>
    <method name="add" start="38" end="38" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="subtract" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="compare" start="40" end="40" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="divide" start="41" end="41" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="modulus" start="42" end="42" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="modulus" byreference="false" type="{unknown}"/>
    </method>
    <method name="multiply" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="pow" start="44" end="44" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="powmod" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
      <parameter name="left_operand" byreference="false" type="{unknown}"/>
      <parameter name="right_operand" byreference="false" type="{unknown}"/>
      <parameter name="modulus" byreference="false" type="{unknown}"/>
    </method>
    <method name="sqrt" start="46" end="46" abstract="false" final="false" static="false" visibility="public">
      <parameter name="operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="binaryToInteger" start="47" end="47" abstract="false" final="false" static="false" visibility="public">
      <parameter name="operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="integerToBinary" start="48" end="48" abstract="false" final="false" static="false" visibility="public">
      <parameter name="operand" byreference="false" type="{unknown}"/>
    </method>
    <method name="hexToDecimal" start="49" end="49" abstract="false" final="false" static="false" visibility="public">
      <parameter name="operand" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
