<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="FBRecordURL" namespace="" name="FBRecordURL" abstract="false" final="false" start="1820" end="1830">
  <file path="/var/www/_modules/social_integration/trunk/docs/en/phpdox/../../../thirdparty/facebook/tests" file="tests.php" realpath="/var/www/_modules/social_integration/trunk/thirdparty/facebook/tests/tests.php" size="66023" time="2015-03-14T10:24:27+13:00" unixtime="1426281867" sha1="5e230162d9b8fb1ce995b0f36119844bc57eb2eb" relative="thirdparty/facebook/tests/tests.php"/>
  <extends full="TransientFacebook" namespace="" name="TransientFacebook"/>
  <member name="url" type="{unknown}" visibility="private" line="1821"/>
  <method name="_oauthRequest" start="1823" end="1825" abstract="false" final="false" static="false" visibility="protected">
    <parameter name="url" byreference="false" type="{unknown}"/>
    <parameter name="params" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRequestedURL" start="1827" end="1829" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="TransientFacebook" namespace="" name="TransientFacebook">
    <extends full="BaseFacebook" namespace="" name="BaseFacebook"/>
    <method name="setPersistentData" start="1812" end="1812" abstract="false" final="false" static="false" visibility="protected">
      <parameter name="key" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="getPersistentData" start="1813" end="1815" abstract="false" final="false" static="false" visibility="protected">
      <parameter name="key" byreference="false" type="{unknown}"/>
      <parameter name="default" byreference="false" type="{unknown}" default="false"/>
    </method>
    <method name="clearPersistentData" start="1816" end="1816" abstract="false" final="false" static="false" visibility="protected">
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="clearAllPersistentData" start="1817" end="1817" abstract="false" final="false" static="false" visibility="protected"/>
  </parent>
  <parent full="BaseFacebook" namespace="" name="BaseFacebook">
    <constant name="VERSION" value="'3.2.0'">
      <docblock>
        <description compact="Version."/>
      </docblock>
    </constant>
    <constant name="SIGNED_REQUEST_ALGORITHM" value="'HMAC-SHA256'">
      <docblock>
        <description compact="Signed Request Algorithm."/>
      </docblock>
    </constant>
    <member name="CURL_OPTS" type="array" visibility="public" line="133">
      <docblock>
        <description compact="Default options for curl."/>
      </docblock>
    </member>
    <member name="DROP_QUERY_PARAMS" type="array" visibility="protected" line="144">
      <docblock>
        <description compact="List of query parameters that get automatically dropped when rebuilding the current URL."/>
      </docblock>
    </member>
    <member name="DOMAIN_MAP" type="array" visibility="public" line="153">
      <docblock>
        <description compact="Maps aliases to Facebook domains."/>
      </docblock>
    </member>
    <member name="appId" type="{unknown}" visibility="protected" line="167">
      <docblock>
        <description compact="The Application ID."/>
        <var type="string"/>
      </docblock>
    </member>
    <member name="appSecret" type="{unknown}" visibility="protected" line="174">
      <docblock>
        <description compact="The Application App Secret."/>
        <var type="string"/>
      </docblock>
    </member>
    <member name="user" type="{unknown}" visibility="protected" line="181">
      <docblock>
        <description compact="The ID of the Facebook user, or 0 if the user is logged out."/>
        <var type="integer"/>
      </docblock>
    </member>
    <member name="signedRequest" type="{unknown}" visibility="protected" line="186">
      <docblock>
        <description compact="The data from the signed_request token."/>
      </docblock>
    </member>
    <member name="state" type="{unknown}" visibility="protected" line="191">
      <docblock>
        <description compact="A CSRF state variable to assist in the defense against CSRF attacks."/>
      </docblock>
    </member>
    <member name="accessToken" type="{unknown}" default="null" visibility="protected" line="199">
      <docblock>
        <description compact="The OAuth access token received in exchange for a valid authorization code.  null means the access token has yet to be determined."/>
        <var type="string"/>
      </docblock>
    </member>
    <member name="fileUploadSupport" type="{unknown}" default="false" visibility="protected" line="206">
      <docblock>
        <description compact="Indicates if the CURL based @ syntax for file uploads is enabled."/>
        <var type="boolean"/>
      </docblock>
    </member>
    <member name="trustForwarded" type="{unknown}" default="false" visibility="protected" line="213">
      <docblock>
        <description compact="Indicates if we trust HTTP_X_FORWARDED_* headers."/>
        <var type="boolean"/>
      </docblock>
    </member>
    <constructor name="__construct" start="225" end="238" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Initialize a Facebook Application.">The configuration:
- appId: the application ID
- secret: the application secret
- fileUpload: (optional) boolean indicating if file uploads are enabled</description>
        <param description="The application configuration" type="array" variable="$config"/>
      </docblock>
      <parameter name="config" byreference="false" type="{unknown}"/>
    </constructor>
    <method name="setAppId" start="246" end="249" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the Application ID."/>
        <param description="The Application ID" type="string" variable="$appId"/>
        <return type="object">
          <type full="BaseFacebook" namespace="" name="BaseFacebook"/>
        </return>
      </docblock>
      <parameter name="appId" byreference="false" type="{unknown}"/>
    </method>
    <method name="getAppId" start="256" end="258" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the Application ID."/>
        <return description="the Application ID" type="string"/>
      </docblock>
    </method>
    <method name="setApiSecret" start="267" end="270" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the App Secret."/>
        <param description="The App Secret" type="string" variable="$apiSecret"/>
        <return type="object">
          <type full="BaseFacebook" namespace="" name="BaseFacebook"/>
        </return>
        <deprecated/>
      </docblock>
      <parameter name="apiSecret" byreference="false" type="{unknown}"/>
    </method>
    <method name="setAppSecret" start="278" end="281" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the App Secret."/>
        <param description="The App Secret" type="string" variable="$appSecret"/>
        <return type="object">
          <type full="BaseFacebook" namespace="" name="BaseFacebook"/>
        </return>
      </docblock>
      <parameter name="appSecret" byreference="false" type="{unknown}"/>
    </method>
    <method name="getApiSecret" start="289" end="291" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the App Secret."/>
        <return description="the App Secret" type="string"/>
        <deprecated/>
      </docblock>
    </method>
    <method name="getAppSecret" start="298" end="300" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the App Secret."/>
        <return description="the App Secret" type="string"/>
      </docblock>
    </method>
    <method name="setFileUploadSupport" start="308" end="311" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the file upload support status."/>
        <param description="The file upload support status." type="boolean" variable="$fileUploadSupport"/>
        <return type="object">
          <type full="BaseFacebook" namespace="" name="BaseFacebook"/>
        </return>
      </docblock>
      <parameter name="fileUploadSupport" byreference="false" type="{unknown}"/>
    </method>
    <method name="getFileUploadSupport" start="318" end="320" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the file upload support status."/>
        <return description="true if and only if the server supports file upload." type="boolean"/>
      </docblock>
    </method>
    <method name="useFileUploadSupport" start="329" end="331" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="DEPRECATED! Please use getFileUploadSupport instead.">Get the file upload support status.</description>
        <return description="true if and only if the server supports file upload." type="boolean"/>
      </docblock>
    </method>
    <method name="setAccessToken" start="341" end="344" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Sets the access token for api calls.  Use this if you get your access token by other means and just want the SDK to use it."/>
        <param description="an access token." type="string" variable="$access_token"/>
        <return type="object">
          <type full="BaseFacebook" namespace="" name="BaseFacebook"/>
        </return>
      </docblock>
      <parameter name="access_token" byreference="false" type="{unknown}"/>
    </method>
    <method name="setExtendedAccessToken" start="351" end="387" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Extend an access token, while removing the short-lived token that might have been generated via client-side flow. Thanks to http://bit.ly/b0Pt0H for the workaround."/>
      </docblock>
      <inline>
        <comment value="need to circumvent json_decode by calling _oauthRequest" line="353"/>
        <comment value="directly, since response isn't JSON format." line="354"/>
      </inline>
    </method>
    <method name="getAccessToken" start="398" end="414" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Determines the access token that should be used for API calls.">The first time this is called, $this-&gt;accessToken is set equal
to either a valid user access token, or it's set to the application
access token if a valid user access token wasn't available.  Subsequent
calls return whatever the first call returned.</description>
        <return description="The access token" type="string"/>
      </docblock>
      <inline>
        <comment value="we've done this already and cached it.  Just return." line="400"/>
        <comment value="first establish access token to be the application" line="404"/>
        <comment value="access token, in case we navigate to the /oauth/access_token" line="405"/>
        <comment value="endpoint, where SOME access token is required." line="406"/>
      </inline>
    </method>
    <method name="getUserAccessToken" start="426" end="476" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Determines and returns the user access token, first using the signed request if present, and then falling back on the authorization code if present.  The intent is to return a valid user access token, or false if one is determined to not be available."/>
        <return description="A valid user access token, or false if one" type="string">could not be determined.</return>
      </docblock>
      <inline>
        <comment value="first, consider a signed request if it's supplied." line="427"/>
        <comment value="if there is a signed request, then it alone determines" line="428"/>
        <comment value="the access token." line="429"/>
        <comment value="apps.facebook.com hands the access_token in the signed_request" line="432"/>
        <comment value="the JS SDK puts a code in with the redirect_uri of ''" line="439"/>
        <comment value="signed request states there's no access token, so anything" line="450"/>
        <comment value="stored should be cleared." line="451"/>
        <comment value="code was bogus, so everything based on it should be invalidated." line="466"/>
        <comment value="as a fallback, just return whatever is in the persistent" line="471"/>
        <comment value="store, knowing nothing explicit (signed request, authorization" line="472"/>
        <comment value="code, etc.) was present to shadow it (or we saw a code in $_REQUEST," line="473"/>
        <comment value="but it's the same as what's in the persistent store)" line="474"/>
      </inline>
    </method>
    <method name="getSignedRequest" start="484" end="495" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Retrieve the signed request, either from a request parameter or, if not present, from a cookie."/>
        <return description="the signed request, if available, or null otherwise." type="string"/>
      </docblock>
    </method>
    <method name="getUser" start="503" end="510" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the UID of the connected user, or 0 if the Facebook user is not connected."/>
        <return description="the UID if available." type="string"/>
      </docblock>
      <inline>
        <comment value="we've already determined this and cached the value." line="505"/>
      </inline>
    </method>
    <method name="getUserFromAvailableData" start="520" end="555" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Determines the connected user by first examining any signed requests, then considering an authorization code, and then falling back to any persistent store storing the user."/>
        <return description="The id of the connected Facebook user," type="integer">or 0 if no such user exists.</return>
      </docblock>
      <inline>
        <comment value="if a signed request is supplied, then it solely determines" line="521"/>
        <comment value="who the user is." line="522"/>
        <comment value="if the signed request didn't present a user id, then invalidate" line="531"/>
        <comment value="all entries in any persistent store." line="532"/>
        <comment value="use access_token to fetch user id if we have a user access_token, or if" line="540"/>
        <comment value="the cached access token has changed." line="541"/>
      </inline>
    </method>
    <method name="getLoginUrl" start="569" end="587" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get a Login URL for use with redirects. By default, full page redirect is assumed. If you are using the generated URL with a window.open() call in JavaScript, you can pass in display=popup as part of the $params.">The parameters:
- redirect_uri: the url to go to after a successful login
- scope: comma separated list of requested extended perms</description>
        <param description="Provide custom parameters" type="array" variable="$params"/>
        <return description="The URL for the login flow" type="string"/>
      </docblock>
      <parameter name="params" byreference="false" type="array"/>
      <inline>
        <comment value="if 'scope' is passed as an array, convert to comma separated list" line="573"/>
      </inline>
    </method>
    <method name="getLogoutUrl" start="598" end="607" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get a Logout URL suitable for use with redirects.">The parameters:
- next: the url to go to after a successful logout</description>
        <param description="Provide custom parameters" type="array" variable="$params"/>
        <return description="The URL for the logout flow" type="string"/>
      </docblock>
      <parameter name="params" byreference="false" type="array"/>
    </method>
    <method name="getLoginStatusUrl" start="620" end="632" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get a login status URL to fetch the status from Facebook.">The parameters:
- ok_session: the URL to go to if a session is found
- no_session: the URL to go to if the user is not connected
- no_user: the URL to go to if the user is not signed into facebook</description>
        <param description="Provide custom parameters" type="array" variable="$params"/>
        <return description="The URL for the logout flow" type="string"/>
      </docblock>
      <parameter name="params" byreference="false" type="array"/>
    </method>
    <method name="api" start="639" end="646" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Make an API call."/>
        <return description="The decoded response" type="mixed"/>
      </docblock>
    </method>
    <method name="getSignedRequestCookieName" start="657" end="659" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Constructs and returns the name of the cookie that potentially houses the signed request for the app user.">The cookie is not set by the BaseFacebook class, but
it may be set by the JavaScript SDK.</description>
        <return description="the name of the cookie that would house" type="string">the signed request value.</return>
      </docblock>
    </method>
    <method name="getMetadataCookieName" start="668" end="670" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Constructs and returns the name of the coookie that potentially contain metadata. The cookie is not set by the BaseFacebook class, but it may be set by the JavaScript SDK."/>
        <return description="the name of the cookie that would house metadata." type="string"/>
      </docblock>
    </method>
    <method name="getCode" start="680" end="697" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the authorization code from the query parameters, if it exists, and otherwise return false to signal no authorization code was discoverable."/>
        <return description="The authorization code, or false if the authorization" type="mixed">code could not be determined.</return>
      </docblock>
      <inline>
        <comment value="CSRF state has done its job, so clear it" line="686"/>
      </inline>
    </method>
    <method name="getUserFromAccessToken" start="709" end="716" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Retrieves the UID with the understanding that $this-&gt;accessToken has already been set and is seemingly legitimate.  It relies on Facebook's Graph API to retrieve user information and then extract the user ID."/>
        <return description="Returns the UID of the Facebook user, or 0" type="integer">if the Facebook user could not be determined.</return>
      </docblock>
    </method>
    <method name="getApplicationAccessToken" start="725" end="727" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns the access token that should be used for logged out users when no authorization code is available."/>
        <return description="The application access token, useful for gathering" type="string">public information about users and applications.</return>
      </docblock>
    </method>
    <method name="establishCSRFTokenState" start="734" end="739" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Lays down a CSRF state token for this process."/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
    </method>
    <method name="getAccessTokenFromCode" start="753" end="789" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Retrieves an access token for the given authorization code (previously generated from www.facebook.com on behalf of a specific user).  The authorization code is sent to graph.facebook.com and a legitimate access token is generated provided the access token and the user for which it was generated all match, and the user is either logged in to Facebook or has granted an offline access permission."/>
        <param description="An authorization code." type="string" variable="$code"/>
        <return description="An access token exchanged for the authorization code, or" type="mixed">false if an access token could not be generated.</return>
      </docblock>
      <parameter name="code" byreference="false" type="{unknown}"/>
      <parameter name="redirect_uri" byreference="false" type="{unknown}" default="null"/>
      <inline>
        <comment value="need to circumvent json_decode by calling _oauthRequest" line="763"/>
        <comment value="directly, since response isn't JSON format." line="764"/>
      </inline>
    </method>
    <method name="_restserver" start="799" end="823" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Invoke the old restserver.php endpoint."/>
        <param description="Method call object" type="array" variable="$params"/>
        <return description="The decoded response object" type="mixed"/>
        <throws type="object">
          <type full="FacebookApiException" namespace="" name="FacebookApiException"/>
        </throws>
      </docblock>
      <parameter name="params" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="generic application level parameters" line="800"/>
        <comment value="results are returned, errors are thrown" line="809"/>
        <comment value="@codeCoverageIgnoreEnd" line="814"/>
      </inline>
    </method>
    <method name="isVideoPost" start="833" end="838" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Return true if this is video post."/>
        <param description="The path" type="string" variable="$path"/>
        <param description="The http method (default 'GET')" type="string" variable="$method"/>
        <return description="true if this is video post" type="boolean"/>
      </docblock>
      <parameter name="path" byreference="false" type="{unknown}"/>
      <parameter name="method" byreference="false" type="string" default="'GET'"/>
    </method>
    <method name="_graph" start="850" end="876" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Invoke the Graph API."/>
        <param description="The path (required)" type="string" variable="$path"/>
        <param description="The http method (default 'GET')" type="string" variable="$method"/>
        <param description="The query/post data" type="array" variable="$params"/>
        <return description="The decoded response object" type="mixed"/>
        <throws type="object">
          <type full="FacebookApiException" namespace="" name="FacebookApiException"/>
        </throws>
      </docblock>
      <parameter name="path" byreference="false" type="{unknown}"/>
      <parameter name="method" byreference="false" type="string" default="'GET'"/>
      <parameter name="params" byreference="false" type="array"/>
      <inline>
        <comment value="method override as we always do a POST" line="855"/>
        <comment value="results are returned, errors are thrown" line="868"/>
        <comment value="@codeCoverageIgnoreEnd" line="873"/>
      </inline>
    </method>
    <method name="_oauthRequest" start="887" end="900" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Make a OAuth Request."/>
        <param description="The path (required)" type="string" variable="$url"/>
        <param description="The query/post data" type="array" variable="$params"/>
        <return description="The decoded response object" type="string"/>
        <throws type="object">
          <type full="FacebookApiException" namespace="" name="FacebookApiException"/>
        </throws>
      </docblock>
      <parameter name="url" byreference="false" type="{unknown}"/>
      <parameter name="params" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="json_encode all params values that are not strings" line="892"/>
      </inline>
    </method>
    <method name="makeRequest" start="913" end="979" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Makes an HTTP request. This method can be overridden by subclasses if developers want to do fancier things or use something other than curl to make the request."/>
        <param description="The URL to make the request to" type="string" variable="$url"/>
        <param description="The parameters to use for the POST body" type="array" variable="$params"/>
        <param description="Initialized curl handle" type="object" variable="$ch">
          <type full="CurlHandler" namespace="" name="CurlHandler"/>
        </param>
        <return description="The response text" type="string"/>
      </docblock>
      <parameter name="url" byreference="false" type="{unknown}"/>
      <parameter name="params" byreference="false" type="{unknown}"/>
      <parameter name="ch" byreference="false" type="{unknown}" default="null"/>
      <inline>
        <comment value="disable the 'Expect: 100-continue' behaviour. This causes CURL to wait" line="926"/>
        <comment value="for 2 seconds if the server does not support this header." line="927"/>
        <comment value="CURLE_SSL_CACERT" line="939"/>
        <comment value="With dual stacked DNS responses, it's possible for a server to" line="947"/>
        <comment value="have IPv6 enabled but not have IPv6 connectivity.  If this is" line="948"/>
        <comment value="the case, curl will try IPv4 first and if that fails, then it will" line="949"/>
        <comment value="fall back to IPv6 and the error EHOSTUNREACH is returned by the" line="950"/>
        <comment value="operating system." line="951"/>
      </inline>
    </method>
    <method name="parseSignedRequest" start="987" end="1009" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Parses a signed_request and validates the signature."/>
        <param description="A signed token" type="string" variable="$signed_request"/>
        <return description="The payload inside it or null if the sig is wrong" type="array"/>
      </docblock>
      <parameter name="signed_request" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="decode the data" line="990"/>
        <comment value="check sig" line="1000"/>
      </inline>
    </method>
    <method name="makeSignedRequest" start="1017" end="1029" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Makes a signed_request blob using the given data."/>
        <param description="The data array." type="array"/>
        <return description="The signed request." type="string"/>
      </docblock>
      <parameter name="data" byreference="false" type="{unknown}"/>
    </method>
    <method name="getApiUrl" start="1037" end="1106" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Build the URL for api given parameters."/>
        <param description="the method name." variable="$method" type="object">
          <type full="String" namespace="" name="String"/>
        </param>
        <return description="The URL for the given parameters" type="string"/>
      </docblock>
      <parameter name="method" byreference="false" type="{unknown}"/>
    </method>
    <method name="getUrl" start="1117" end="1130" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Build the URL for given domain alias, path and parameters."/>
        <param description="The name of the domain" variable="$name" type="string"/>
        <param description="Optional path (without a leading slash)" variable="$path" type="string"/>
        <param description="Optional query parameters" variable="$params" type="array"/>
        <return description="The URL for the given parameters" type="string"/>
      </docblock>
      <parameter name="name" byreference="false" type="{unknown}"/>
      <parameter name="path" byreference="false" type="string" default="''"/>
      <parameter name="params" byreference="false" type="array"/>
    </method>
    <method name="getHttpHost" start="1132" end="1137" abstract="false" final="false" static="false" visibility="protected"/>
    <method name="getHttpProtocol" start="1139" end="1151" abstract="false" final="false" static="false" visibility="protected"/>
    <method name="getBaseDomain" start="1156" end="1165" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the base domain used for the cookie."/>
      </docblock>
      <inline>
        <comment value="The base domain is stored in the metadata cookie if not we fallback" line="1157"/>
        <comment value="to the current hostname" line="1158"/>
      </inline>
    </method>
    <method name="getCurrentUrl" start="1175" end="1206" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns the Current URL, stripping it of known FB parameters that should not persist."/>
        <return description="The current URL" type="string"/>
      </docblock>
      <inline>
        <comment value="drop known fb params" line="1183"/>
        <comment value="use port if non default" line="1197"/>
        <comment value="rebuild" line="1204"/>
      </inline>
    </method>
    <method name="shouldRetainParam" start="1219" end="1227" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Returns true if and only if the key or key/value pair should be retained as part of the query string.  This amounts to a brute-force search of the very small list of Facebook-specific params that should be stripped out."/>
        <param description="A key or key/value pair within a URL's query (e.g." type="string" variable="$param">'foo=a', 'foo=', or 'foo'.</param>
        <return type="boolean"/>
      </docblock>
      <parameter name="param" byreference="false" type="{unknown}"/>
    </method>
    <method name="throwAPIException" start="1237" end="1257" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Analyzes the supplied result to see if it was thrown because the access token is no longer valid.  If that is the case, then we destroy the session."/>
        <param description="A record storing the error message returned" variable="$result" type="array">by a failed API call.</param>
      </docblock>
      <parameter name="result" byreference="false" type="{unknown}"/>
    </method>
    <method name="errorLog" start="1265" end="1274" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Prints to the error log if you aren't in command line mode."/>
        <param description="Log message" type="string" variable="$msg"/>
      </docblock>
      <parameter name="msg" byreference="false" type="{unknown}"/>
      <inline>
        <comment value="disable error log if we are running in a CLI environment" line="1266"/>
        <comment value="@codeCoverageIgnoreStart" line="1267"/>
      </inline>
    </method>
    <method name="base64UrlDecode" start="1286" end="1288" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Base64 encoding that doesn't need to be urlencode()ed.">Exactly the same as base64_encode except it uses
  - instead of +
  _ instead of /
  No padded =</description>
        <param description="base64UrlEncoded string" type="string" variable="$input"/>
        <return type="string"/>
      </docblock>
      <parameter name="input" byreference="false" type="{unknown}"/>
    </method>
    <method name="base64UrlEncode" start="1299" end="1303" abstract="false" final="false" static="true" visibility="protected">
      <docblock>
        <description compact="Base64 encoding that doesn't need to be urlencode()ed.">Exactly the same as base64_encode except it uses
  - instead of +
  _ instead of /</description>
        <param description="string" type="string" variable="$input"/>
        <return description="base64Url encoded string" type="string"/>
      </docblock>
      <parameter name="input" byreference="false" type="{unknown}"/>
    </method>
    <method name="destroySession" start="1308" end="1332" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Destroy the current session"/>
      </docblock>
      <inline>
        <comment value="Javascript sets a cookie that will be used in getSignedRequest that we" line="1314"/>
        <comment value="need to clear if we can" line="1315"/>
      </inline>
    </method>
    <method name="getMetadataCookie" start="1339" end="1363" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Parses the metadata cookie that our Javascript API set"/>
        <return description="array mapping key to value" type="object">
          <type full="an" namespace="" name="an"/>
        </return>
      </docblock>
      <inline>
        <comment value="The cookie value can be wrapped in &quot;-characters so remove them" line="1345"/>
      </inline>
    </method>
    <method name="isAllowedDomain" start="1365" end="1370" abstract="false" final="false" static="true" visibility="protected">
      <parameter name="big" byreference="false" type="{unknown}"/>
      <parameter name="small" byreference="false" type="{unknown}"/>
    </method>
    <method name="endsWith" start="1372" end="1378" abstract="false" final="false" static="true" visibility="protected">
      <parameter name="big" byreference="false" type="{unknown}"/>
      <parameter name="small" byreference="false" type="{unknown}"/>
    </method>
    <method name="setPersistentData" start="1399" end="1399" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Stores the given ($key, $value) pair, so that future calls to getPersistentData($key) return $value. This call may be in another request."/>
        <param type="string" variable="$key"/>
        <param type="array" variable="$value"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="getPersistentData" start="1409" end="1409" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Get the data for $key, persisted by BaseFacebook::setPersistentData()"/>
        <param description="The key of the data to retrieve" type="string" variable="$key"/>
        <param description="The default value to return if $key is not found" type="boolean" variable="$default"/>
        <return type="mixed"/>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
      <parameter name="default" byreference="false" type="{unknown}" default="false"/>
    </method>
    <method name="clearPersistentData" start="1417" end="1417" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Clear the data with $key from the persistent storage"/>
        <param type="string" variable="$key"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="key" byreference="false" type="{unknown}"/>
    </method>
    <method name="clearAllPersistentData" start="1424" end="1424" abstract="true" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Clear all data from the persistent storage"/>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
    </method>
  </parent>
</class>
