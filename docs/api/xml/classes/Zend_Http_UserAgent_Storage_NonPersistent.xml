<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Zend_Http_UserAgent_Storage_NonPersistent" namespace="" name="Zend_Http_UserAgent_Storage_NonPersistent" abstract="false" final="false" start="42" end="97">
  <file path="/var/www/_modules/social_integration/trunk/docs/en/phpdox/../../../thirdparty/Zend/Http/UserAgent/Storage" file="NonPersistent.php" realpath="/var/www/_modules/social_integration/trunk/thirdparty/Zend/Http/UserAgent/Storage/NonPersistent.php" size="2690" time="2015-03-14T10:23:58+13:00" unixtime="1426281838" sha1="f440dbe5af696daf3e013c6dfd0e3c2c32256585" relative="thirdparty/Zend/Http/UserAgent/Storage/NonPersistent.php"/>
  <docblock>
    <description compact="Non-Persistent Browser Storage">Since HTTP Browserentication happens again on each request, this will always be
re-populated. So there's no need to use sessions, this simple value class
will hold the data for rest of the current request.</description>
    <package value="Zend_Http"/>
    <subpackage value="UserAgent"/>
    <copyright value="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
    <license name="http://framework.zend.com/license/new-bsd     New BSD License"/>
  </docblock>
  <implements full="Zend_Http_UserAgent_Storage" namespace="" name="Zend_Http_UserAgent_Storage"/>
  <member name="_data" type="{unknown}" visibility="protected" line="49">
    <docblock>
      <description compact="Holds the actual Browser data"/>
      <var type="mixed"/>
    </docblock>
  </member>
  <method name="isEmpty" start="57" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns true if and only if storage is empty"/>
      <throws description="If it is impossible to determine whether storage is empty" type="object">
        <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
      </throws>
      <return type="boolean"/>
    </docblock>
  </method>
  <method name="read" start="70" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the contents of storage">Behavior is undefined when storage is empty.</description>
      <throws description="If reading contents from storage is impossible" type="object">
        <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
      </throws>
      <return type="mixed"/>
    </docblock>
  </method>
  <method name="write" start="82" end="85" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes $contents to storage"/>
      <param type="mixed" variable="$contents"/>
      <throws description="If writing $contents to storage is impossible" type="object">
        <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
      </throws>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
    <parameter name="contents" byreference="false" type="{unknown}"/>
  </method>
  <method name="clear" start="93" end="96" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clears contents from storage"/>
      <throws description="If clearing contents from storage is impossible" type="object">
        <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
      </throws>
      <return type="object">
        <type full="void" namespace="" name="void"/>
      </return>
    </docblock>
  </method>
  <interface full="Zend_Http_UserAgent_Storage" namespace="" name="Zend_Http_UserAgent_Storage">
    <method name="isEmpty" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if and only if storage is empty"/>
        <throws description="If it is impossible to determine whether storage is empty" type="object">
          <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
        </throws>
        <return type="boolean"/>
      </docblock>
    </method>
    <method name="read" start="47" end="47" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the contents of storage associated to the key parameter">Behavior is undefined when storage is empty.</description>
        <throws description="If reading contents from storage is impossible" type="object">
          <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
        </throws>
        <return type="mixed"/>
      </docblock>
    </method>
    <method name="write" start="56" end="56" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Writes $contents associated to the key parameter to storage"/>
        <param type="mixed" variable="$contents"/>
        <throws description="If writing $contents to storage is impossible" type="object">
          <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
        </throws>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
      <parameter name="contents" byreference="false" type="{unknown}"/>
    </method>
    <method name="clear" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Clears contents from storage"/>
        <throws description="If clearing contents from storage is impossible" type="object">
          <type full="Zend_Http_UserAgent_Storage_Exception" namespace="" name="Zend_Http_UserAgent_Storage_Exception"/>
        </throws>
        <return type="object">
          <type full="void" namespace="" name="void"/>
        </return>
      </docblock>
    </method>
  </interface>
</class>
